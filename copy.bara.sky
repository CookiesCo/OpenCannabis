
sourceRepo = "git@github.com:OpenCannabis/Specification.git"
sourceBranch = "master"

protocolRepo = "git@github.com:OpenCannabis/Protocol.git"
protocolBranch = "beta/monorepo"

pythonRepo = "git@github.com:OpenCannabis/Python.git"
pythonBranch = "beta/monorepo"

core.workflow(
    name = "protocol",
    origin = git.origin(
        url = sourceRepo,
        ref = sourceBranch,
    ),
    destination = git.destination(
        url = protocolRepo,
        fetch = protocolRepo,
        push = protocolBranch,
    ),
    origin_files = glob([
        "opencannabis/**/*.proto",
        "opencannabis/**/*.build",
    ]),
    authoring = authoring.pass_thru(
        "Cookiebot <info+code@cookiescalifornia.com>"),
    core.replace(
        before = "${x}",
        after = "",
        multiline = True,
        regex_groups = {
            "x": "(?m)^.*BEGIN-INTERNAL[\\w\\W]*?END-INTERNAL.*$\\n",
        },
    ),
)

core.workflow(
    name = "python",
    origin = git.origin(
        url = sourceRepo,
        ref = sourceBranch,
    ),
    destination = git.destination(
        url = pythonRepo,
        fetch = pythonRepo,
        push = pythonBranch,
    ),
    origin_files = glob([
        "sdk/python/**",
    ]),
    authoring = authoring.pass_thru(
        "Cookiebot <info+code@cookiescalifornia.com>"),
    transformations = [
        core.move("sdk/python/", ""),
        core.move("WORKSPACE.disabled", "WORKSPACE"),
        core.replace(
            before = "//sdk/python",
	    after = "//",
            paths = glob(["**/BUILD.bazel", "**/BUILD", "**/*.bzl"]),
	),
        core.replace(
            before = "${x}",
            after = "",
            multiline = True,
            regex_groups = {
                "x": "(?m)^.*BEGIN-INTERNAL[\\w\\W]*?END-INTERNAL.*$\\n",
            },
        ),
    ],
)
